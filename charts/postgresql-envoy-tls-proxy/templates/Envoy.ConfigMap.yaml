apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "postgresql-envoy-tls-proxy.fullname" . }}-envoy-config
data:
  envoy.yaml: |-
    node:
      id: proxy
      cluster: proxy
    admin:
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8000
      access_log:
      - name: envoy.access_loggers.stdout
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          log_format:
            json_format:
              start_time: "%START_TIME%"
              upstream_host: "%UPSTREAM_HOST%"
              user_agent: "%REQ(USER-AGENT)%"

    # https://github.com/envoyproxy/envoy/issues/10942
    static_resources:
      clusters:
      - name: postgres_cluster
        connect_timeout: {{ .Values.database.timeout }}
        type: STRICT_DNS
        load_assignment:
          cluster_name: postgres_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 0.0.0.0
                    port_value: 6432

      listeners:
      - name: listener
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 5432
        filter_chains:
        - filters:
          - name: envoy.filters.network.postgres_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.postgres_proxy.v3alpha.PostgresProxy
              stat_prefix: egress_postgres
              enable_sql_parsing: false
              terminate_ssl: true
          - name: envoy.tcp_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
              stat_prefix: tcp_postgres
              cluster: postgres_cluster
              idle_timeout: 120s
          transport_socket:
            name: "starttls"
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.starttls.v3.StartTlsConfig
              tls_socket_config:
                common_tls_context:
                  tls_certificate_sds_secret_configs:
                  - name: server_cert
                    sds_config:
                      path: /etc/envoy/sds.yaml
  sds.yaml: |-
     resources:
      - "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret"
        name: server_cert
        tls_certificate:
            certificate_chain:
                filename: "/etc/envoy-certs/tls.crt"
            private_key:
                filename: "/etc/envoy-certs/tls.key"
