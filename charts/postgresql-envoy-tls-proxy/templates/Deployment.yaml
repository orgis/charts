apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgresql-envoy-tls-proxy.fullname" . }}
  labels:
    {{- include "postgresql-envoy-tls-proxy.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "postgresql-envoy-tls-proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config-envoy: {{ include (print $.Template.BasePath "/Envoy.ConfigMap.yaml") . | sha256sum }}
        checksum/secret-pgbouncer: {{ include (print $.Template.BasePath "/PGBouncer.Secret.yaml") . | sha256sum }}
      labels:
        {{- include "postgresql-envoy-tls-proxy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "postgresql-envoy-tls-proxy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
            - name: http
              containerPort: 8000
              protocol: TCP
          startupProbe:
            httpGet:
              path: /
              port: http
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            tcpSocket:
              port: 5432
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: envoy-config
              mountPath: /etc/envoy
            - name: envoy-certs
              mountPath: /etc/envoy-certs
        - name: pgbouncer
          image: "{{ .Values.pgbouncer.image.repository }}:{{ .Values.pgbouncer.image.tag }}"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: postgres
              containerPort: 6432
              protocol: TCP
          envFrom:
            - secretRef:
                name: {{ include "postgresql-envoy-tls-proxy.fullname" . }}-pgbouncer-auth
      volumes:
        - name: envoy-config
          configMap:
            name: {{ include "postgresql-envoy-tls-proxy.fullname" . }}-envoy-config
        - name: envoy-certs
          secret:
            secretName: {{ include "postgresql-envoy-tls-proxy.fullname" . }}-tls
